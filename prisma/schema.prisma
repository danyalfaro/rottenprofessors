generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int             @id @default(autoincrement())
  email         String          @unique
  password      String
  token         String?
  universityId  Int
  firstName     String
  lastName      String
  isAdmin       Boolean         @default(false)
  university    University      @relation(fields: [universityId], references: [id])
  CourseComment CourseComment[]
}

model University {
  id            Int         @id @default(autoincrement())
  name          String      @unique
  address       String
  city          String
  rating        Int         @default(0)
  emblemPicture String?
  Professor     Professor[]
  User          User[]
}

model Professor {
  id            Int         @id @default(autoincrement())
  firstName     String
  lastName      String
  overallRating Int         @default(0)
  universityId  Int
  picture       String?
  departmentId  Int?
  department    Department? @relation(fields: [departmentId], references: [id])
  university    University  @relation(fields: [universityId], references: [id])
  course        Course[]
}

model Course {
  id             Int             @id @default(autoincrement())
  code           String          @unique
  name           String?
  description    String?
  professorId    Int?
  departmentId   Int?
  Department     Department?     @relation(fields: [departmentId], references: [id])
  Professor      Professor?      @relation(fields: [professorId], references: [id])
  courseComments CourseComment[]
}

model Department {
  id        Int         @id @default(autoincrement())
  name      String
  Course    Course[]
  Professor Professor[]
}

model CourseComment {
  id          Int      @id @default(autoincrement())
  comment     String?
  courseId    Int
  createdOn   DateTime @default(now())
  isAnonymous Boolean
  userId      Int?
  rating1     Int
  rating2     Int
  rating3     Int
  rating4     Int
  section     String?
  Course      Course   @relation(fields: [courseId], references: [id])
  user        User?    @relation(fields: [userId], references: [id])
}
